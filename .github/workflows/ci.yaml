name: CI

on:
  push:
    # branches: ["master", "dev"]
    tags: ["*"]
  pull_request:
    branches: ["master", "dev"]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    env:
      RUST_BACKTRACE: 1
      RUST_TEST_THREADS: 1
    steps:
    - uses: actions/checkout@v4

    - name: Install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Cache dependencies for ${{ matrix.platform.name }}
      uses: actions/cache@v3
      with:
        path: |
          target
        key: ${{ runner.os }}-${{ matrix.platform.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.platform.target }}-cargo-

    - name: Install dependencies (Ubuntu)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev libxdo-dev

    - name: Run tests
      run: make ci

  integration_tests:
    runs-on: [self-hosted, linux, x64]
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    # - name: Install dependencies
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y pkg-config libssl-dev libxdo-dev
    - name: Install tarpaulin
      run: cargo install cargo-tarpaulin
    - name: Run integration tests and generate coverage report
      run: cargo tarpaulin --features integration_tests --out Xml --verbose -- --test-threads=1
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4.2.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./cobertura.xml
        fail_ci_if_error: true
    - name: Clean up
      if: always()
      run: |
        cargo clean
        rm -f cobertura.xml